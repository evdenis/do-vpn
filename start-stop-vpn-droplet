#!/usr/bin/perl

use warnings;
use strict;

use feature qw/say/;

use DigitalOcean;
use File::Slurp qw/read_file/;
use FindBin;
use List::Util qw/all/;


my %conf;
my @signals = qw/INT HUP TERM QUIT/;

foreach(read_file("$FindBin::Bin/config")) {
   chomp;
   if (m/\A\h*+([^\h]++)\h*+=\h*+([^\h]++)\h*+\z/) {
      $conf{$1} = $2
   }
}

if (@ARGV) {
   if ($ARGV[0] eq 'i' || $ARGV[0] eq '-i' || $ARGV[0] eq 'interactive' || $ARGV[0] eq '--interactive') {
      $conf{interactive} = 1
   } else {
      $conf{interactive} = 0
   }
}

my $do = DigitalOcean->new(oauth_token => $conf{oauth_token}, wait_on_actions => 1);
 

my $vpn_droplet;
my $droplets_collection = $do->droplets;
my $obj;

while($obj = $droplets_collection->next) {
	if ($obj->name eq $conf{name}) {
         $vpn_droplet = $obj
	}
}

# LIST IMAGES/SNAPSHOTS
#my $img = $do->images;
#my $i;
#while($i = $img->next) {
#   say $i->name . " : " . $i->id;
#}
# LIST REGIONS
#my $img = $do->regions;
#my $i;
#while($i = $img->next) {
#   say $i->name . " : " . $i->slug;
#}
# LIST SIZES
#my $img = $do->sizes;
#my $i;
#while($i = $img->next) {
#   say $i->slug . " : " . $i->disk;
#}


sub create_droplet
{
   say "Creating Droplet " . $_[1]->{name};
   my $d = $_[0]->create_droplet(
      name      => $_[1]->{name},
      size      => $_[1]->{size},
      image     => $_[1]->{image},
      region    => $_[1]->{region}
   );
   say "Droplet Id: " . $d->id;
   $d = $_[0]->droplet($d->id);
   say "Droplet IP: " . $d->networks->v4->[0]->ip_address;

   $d
}

sub destroy_droplet
{
   my $droplet;
   if (@_) {
      if (all { $_[0] ne $_ } @signals) {
         $droplet = $_[0]
      } else {
         if ($vpn_droplet) {
            $droplet = $vpn_droplet
         } else {
            die "Can't destroy droplet\n"
         }
      }
   }
   say "Destroying Droplet " . $droplet->name;
   say "Droplet id: " . $droplet->id;

   $droplet->delete;

   undef
}


unless ($vpn_droplet) {
   if ($conf{interactive}) {
      say "Interactive mode";
      foreach (@signals) {
         $SIG{$_} = \&destroy_droplet
      }
   }

   $vpn_droplet = create_droplet $do, \%conf;

   if ($conf{interactive}) {
      say "Waiting for signal ...";
      sleep
   }
} else {
   destroy_droplet $vpn_droplet;
}

say "Done.";


